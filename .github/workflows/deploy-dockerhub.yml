name: Release to Docker Hub if tests OK (CI/CD)

on:
  push:
    branches:
      - 'main:dockerhub'
    tags:
      - 'v*'
  workflow_run:
    workflows: ['Dependabot PR Check']
    types:
      - completed
  

jobs:
  dockerhub-build-test-upload:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with: 
          path: /tmp/.buildx-cache
          key:  ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: List files in current working directory
        run: ls -a

      - name: Push release to Docker Hub - multistage
        uses: docker/build-push-action@v5
        if: github.event_name != 'pull_request'
        with:
          context: frontend/
          push: true
          file: frontend/Dockerfile.multistage
          target: build-release-stage
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to:   type=local,dest=/tmp/.buildx-cache
